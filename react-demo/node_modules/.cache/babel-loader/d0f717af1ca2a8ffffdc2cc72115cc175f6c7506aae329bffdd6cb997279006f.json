{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shlok\\\\Desktop\\\\react2\\\\react-demo\\\\src\\\\Home.js\";\nimport { Cluster, clusterApiUrl, Connection, PublicKey, Keypair } from \"@solana/web3.js\";\nimport { encodeURL, createQR } from \"@solana/pay\";\nimport BigNumber from \"bignumber.js\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  // Function to create a QR code\n  function generateQR(recipientAddress, amount) {\n    try {\n      // Convert recipient address to PublicKey\n      const recipientPublicKey = new PublicKey(recipientAddress);\n\n      // Create the transaction QR code\n      const qrCode = createTxQr(recipientPublicKey, amount);\n\n      // Print or display the QR code\n      console.log(qrCode); // Replace with your preferred method of displaying the QR code\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  }\n\n  // Example usage\n  const recipientAddress = 'your_recipient_address';\n  const amount = 100; // Amount in Solana tokens\n\n  generateQR(recipientAddress, amount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createCode('kTTpYq1DrudiVtnGKVwZcc5SYvRi3PhF2ai5kVqzkiu', 0.1),\n      children: \"2424\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cluster","clusterApiUrl","Connection","PublicKey","Keypair","encodeURL","createQR","BigNumber","useRef","jsxDEV","_jsxDEV","Home","generateQR","recipientAddress","amount","recipientPublicKey","qrCode","createTxQr","console","log","error","children","onClick","createCode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shlok/Desktop/react2/react-demo/src/Home.js"],"sourcesContent":["import { Cluster, clusterApiUrl, Connection, PublicKey, Keypair } from \"@solana/web3.js\";\r\nimport { encodeURL, createQR } from \"@solana/pay\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useRef } from \"react\";\r\n\r\n\r\nexport default function Home() {\r\n\r\n\r\n// Function to create a QR code\r\nfunction generateQR(recipientAddress, amount) {\r\n  try {\r\n    // Convert recipient address to PublicKey\r\n    const recipientPublicKey = new PublicKey(recipientAddress);\r\n\r\n    // Create the transaction QR code\r\n    const qrCode = createTxQr(recipientPublicKey, amount);\r\n\r\n    // Print or display the QR code\r\n    console.log(qrCode); // Replace with your preferred method of displaying the QR code\r\n  } catch (error) {\r\n    console.error('Error generating QR code:', error);\r\n  }\r\n}\r\n\r\n// Example usage\r\nconst recipientAddress = 'your_recipient_address';\r\nconst amount = 100; // Amount in Solana tokens\r\n\r\ngenerateQR(recipientAddress, amount);\r\n\r\n    return (\r\n      <div>\r\n        <button onClick={createCode('kTTpYq1DrudiVtnGKVwZcc5SYvRi3PhF2ai5kVqzkiu',0.1)}>2424</button>\r\n      </div>\r\n    )\r\n}"],"mappings":";AAAA,SAASA,OAAO,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,OAAO,QAAQ,iBAAiB;AACxF,SAASC,SAAS,EAAEC,QAAQ,QAAQ,aAAa;AACjD,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG/B,eAAe,SAASC,IAAIA,CAAA,EAAG;EAG/B;EACA,SAASC,UAAUA,CAACC,gBAAgB,EAAEC,MAAM,EAAE;IAC5C,IAAI;MACF;MACA,MAAMC,kBAAkB,GAAG,IAAIZ,SAAS,CAACU,gBAAgB,CAAC;;MAE1D;MACA,MAAMG,MAAM,GAAGC,UAAU,CAACF,kBAAkB,EAAED,MAAM,CAAC;;MAErD;MACAI,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF;;EAEA;EACA,MAAMP,gBAAgB,GAAG,wBAAwB;EACjD,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;;EAEpBF,UAAU,CAACC,gBAAgB,EAAEC,MAAM,CAAC;EAEhC,oBACEJ,OAAA;IAAAW,QAAA,eACEX,OAAA;MAAQY,OAAO,EAAEC,UAAU,CAAC,6CAA6C,EAAC,GAAG,CAAE;MAAAF,QAAA,EAAC;IAAI;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC1F,CAAC;AAEZ;AAACC,EAAA,GA9BuBjB,IAAI;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}