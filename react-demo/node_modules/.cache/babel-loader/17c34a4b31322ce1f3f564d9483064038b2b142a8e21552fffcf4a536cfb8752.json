{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shlok\\\\Desktop\\\\react2\\\\react-demo\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { Cluster, clusterApiUrl, Connection, PublicKey, Keypair, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { encodeURL, createQR } from \"@solana/pay\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const [balance, setBalance] = useState(0);\n  const [txDone, setTxDone] = useState(false);\n  useEffect(() => {\n    passProps();\n    const timer = setInterval(() => {\n      checkTx();\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  async function passProps() {\n    await createTxQr(\"88JigRuKKTdiH72sCdBPXQRuKDKCHAQBaQTkJ4RMV8yw\", 1);\n  }\n  const ref = useRef(null);\n  async function createTxQr(recipientAddr, Amount) {\n    const recipient = new PublicKey(recipientAddr);\n    const amount = new BigNumber(Amount);\n    const reference = new Keypair().publicKey;\n    const label = \"\"; //project name\n    const message = \"\"; //what message on tx ?\n    const memo = \"\"; //project name\n    const url = encodeURL({\n      recipient,\n      amount,\n      reference,\n      label,\n      message,\n      memo\n    });\n    console.log(\"url\", url.href);\n    if (typeof window !== \"undefined\") {\n      const qrCode = createQR(url);\n      qrCode.append(ref.current);\n    }\n    await fetchBalance().then(e => {\n      setBalance(e);\n    });\n    console.log(\"bro bal\", balance);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"Q+j4sCiT4orzWb9wDDNrMMhJ+MY=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Cluster","clusterApiUrl","Connection","PublicKey","Keypair","LAMPORTS_PER_SOL","encodeURL","createQR","BigNumber","useEffect","useRef","useState","jsxDEV","_jsxDEV","Home","_s","balance","setBalance","txDone","setTxDone","passProps","timer","setInterval","checkTx","clearInterval","createTxQr","ref","recipientAddr","Amount","recipient","amount","reference","publicKey","label","message","memo","url","console","log","href","window","qrCode","append","current","fetchBalance","then","e","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shlok/Desktop/react2/react-demo/src/Home.js"],"sourcesContent":["\r\nimport {\r\n    Cluster,\r\n    clusterApiUrl,\r\n    Connection,\r\n    PublicKey,\r\n    Keypair,\r\n    LAMPORTS_PER_SOL,\r\n} from \"@solana/web3.js\";\r\nimport { encodeURL, createQR } from \"@solana/pay\";\r\nimport BigNumber from \"bignumber.js\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nexport default function Home() {\r\n    const [balance, setBalance] = useState(0);\r\n    const [txDone, setTxDone] = useState(false);\r\n\r\n    useEffect(() => {\r\n        passProps();\r\n        const timer = setInterval(() => {\r\n            checkTx();\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    async function passProps() {\r\n        await createTxQr(\"88JigRuKKTdiH72sCdBPXQRuKDKCHAQBaQTkJ4RMV8yw\", 1);\r\n    }\r\n\r\n    const ref = useRef(null);\r\n\r\n\r\n    async function createTxQr(recipientAddr, Amount) {\r\n        const recipient = new PublicKey(recipientAddr);\r\n        const amount = new BigNumber(Amount);\r\n        const reference = new Keypair().publicKey;\r\n        const label = \"\"; //project name\r\n        const message = \"\"; //what message on tx ?\r\n        const memo = \"\"; //project name\r\n        const url = encodeURL({\r\n            recipient,\r\n            amount,\r\n            reference,\r\n            label,\r\n            message,\r\n            memo,\r\n        });\r\n        console.log(\"url\", url.href);\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            const qrCode = createQR(url);\r\n            qrCode.append(ref.current);\r\n        }\r\n\r\n        await fetchBalance()\r\n        .then((e) => {setBalance(e)})\r\n        \r\n        console.log(\"bro bal\", balance)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div ref={ref} />\r\n        </div>\r\n  );\r\n}\r\n\r\n\r\n"],"mappings":";;AACA,SACIA,OAAO,EACPC,aAAa,EACbC,UAAU,EACVC,SAAS,EACTC,OAAO,EACPC,gBAAgB,QACb,iBAAiB;AACxB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,aAAa;AACjD,OAAOC,SAAS,MAAM,cAAc;AACpC,SAASC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpD,eAAe,SAASC,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAE3CF,SAAS,CAAC,MAAM;IACZW,SAAS,CAAC,CAAC;IACX,MAAMC,KAAK,GAAGC,WAAW,CAAC,MAAM;MAC5BC,OAAO,CAAC,CAAC;IACb,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAM;MACTC,aAAa,CAACH,KAAK,CAAC;IACxB,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeD,SAASA,CAAA,EAAG;IACvB,MAAMK,UAAU,CAAC,8CAA8C,EAAE,CAAC,CAAC;EACvE;EAEA,MAAMC,GAAG,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAGxB,eAAee,UAAUA,CAACE,aAAa,EAAEC,MAAM,EAAE;IAC7C,MAAMC,SAAS,GAAG,IAAI1B,SAAS,CAACwB,aAAa,CAAC;IAC9C,MAAMG,MAAM,GAAG,IAAItB,SAAS,CAACoB,MAAM,CAAC;IACpC,MAAMG,SAAS,GAAG,IAAI3B,OAAO,CAAC,CAAC,CAAC4B,SAAS;IACzC,MAAMC,KAAK,GAAG,EAAE,CAAC,CAAC;IAClB,MAAMC,OAAO,GAAG,EAAE,CAAC,CAAC;IACpB,MAAMC,IAAI,GAAG,EAAE,CAAC,CAAC;IACjB,MAAMC,GAAG,GAAG9B,SAAS,CAAC;MAClBuB,SAAS;MACTC,MAAM;MACNC,SAAS;MACTE,KAAK;MACLC,OAAO;MACPC;IACJ,CAAC,CAAC;IACFE,OAAO,CAACC,GAAG,CAAC,KAAK,EAAEF,GAAG,CAACG,IAAI,CAAC;IAE5B,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MAC/B,MAAMC,MAAM,GAAGlC,QAAQ,CAAC6B,GAAG,CAAC;MAC5BK,MAAM,CAACC,MAAM,CAAChB,GAAG,CAACiB,OAAO,CAAC;IAC9B;IAEA,MAAMC,YAAY,CAAC,CAAC,CACnBC,IAAI,CAAEC,CAAC,IAAK;MAAC7B,UAAU,CAAC6B,CAAC,CAAC;IAAA,CAAC,CAAC;IAE7BT,OAAO,CAACC,GAAG,CAAC,SAAS,EAAEtB,OAAO,CAAC;EACnC;EAEA,oBACIH,OAAA;IAAAkC,QAAA,eACIlC,OAAA;MAAKa,GAAG,EAAEA;IAAI;MAAAsB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAChB,CAAC;AAEd;AAACpC,EAAA,CAvDuBD,IAAI;AAAAsC,EAAA,GAAJtC,IAAI;AAAA,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}