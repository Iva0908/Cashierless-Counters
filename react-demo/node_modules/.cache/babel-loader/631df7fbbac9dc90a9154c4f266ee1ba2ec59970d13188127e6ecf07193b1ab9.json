{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shlok\\\\Desktop\\\\react2\\\\react-demo\\\\src\\\\Home.js\";\nimport { PublicKey } from '@solana/web3.js';\nimport { createQR } from '@solana/pay';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  // Function to create a QR code\n  function generateQR(recipientAddress, amount) {\n    try {\n      // Convert recipient address to PublicKey\n      const recipientPublicKey = new PublicKey(recipientAddress);\n\n      // Create the transaction QR code\n      const qrCode = createQR(recipientPublicKey, amount);\n\n      // Print or display the QR code\n      console.log(qrCode); // Replace with your preferred method of displaying the QR code\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  }\n\n  // Example usage\n  const recipientAddress = 'your_recipient_address';\n  const amount = 100; // Amount in Solana tokens\n\n  generateQR(recipientAddress, amount);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"genrate\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n}\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["PublicKey","createQR","jsxDEV","_jsxDEV","Home","generateQR","recipientAddress","amount","recipientPublicKey","qrCode","console","log","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shlok/Desktop/react2/react-demo/src/Home.js"],"sourcesContent":["\r\nimport { PublicKey } from '@solana/web3.js';\r\nimport { createQR } from '@solana/pay';\r\n\r\n\r\nexport default function Home() {\r\n\r\n\r\n// Function to create a QR code\r\nfunction generateQR(recipientAddress, amount) {\r\n  try {\r\n    // Convert recipient address to PublicKey\r\n    const recipientPublicKey = new PublicKey(recipientAddress);\r\n\r\n    // Create the transaction QR code\r\n    const qrCode = createQR(recipientPublicKey, amount);\r\n\r\n    // Print or display the QR code\r\n    console.log(qrCode); // Replace with your preferred method of displaying the QR code\r\n  } catch (error) {\r\n    console.error('Error generating QR code:', error);\r\n  }\r\n}\r\n\r\n// Example usage\r\nconst recipientAddress = 'your_recipient_address';\r\nconst amount = 100; // Amount in Solana tokens\r\n\r\ngenerateQR(recipientAddress, amount);\r\n\r\n    return (\r\n      <div>\r\n        genrate\r\n      </div>\r\n    )\r\n}"],"mappings":";AACA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,QAAQ,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGvC,eAAe,SAASC,IAAIA,CAAA,EAAG;EAG/B;EACA,SAASC,UAAUA,CAACC,gBAAgB,EAAEC,MAAM,EAAE;IAC5C,IAAI;MACF;MACA,MAAMC,kBAAkB,GAAG,IAAIR,SAAS,CAACM,gBAAgB,CAAC;;MAE1D;MACA,MAAMG,MAAM,GAAGR,QAAQ,CAACO,kBAAkB,EAAED,MAAM,CAAC;;MAEnD;MACAG,OAAO,CAACC,GAAG,CAACF,MAAM,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF;;EAEA;EACA,MAAMN,gBAAgB,GAAG,wBAAwB;EACjD,MAAMC,MAAM,GAAG,GAAG,CAAC,CAAC;;EAEpBF,UAAU,CAACC,gBAAgB,EAAEC,MAAM,CAAC;EAEhC,oBACEJ,OAAA;IAAAU,QAAA,EAAK;EAEL;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEZ;AAACC,EAAA,GA9BuBd,IAAI;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}