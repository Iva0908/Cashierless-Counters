{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shlok\\\\Desktop\\\\react2\\\\react-demo\\\\src\\\\Home.js\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = props => {\n  _s();\n  const {\n    repaddress,\n    amount\n  } = props;\n  const [balance, setBalance] = useState(0);\n  const [txDone, setTxDone] = useState(false);\n  useEffect(() => {\n    passProps();\n    const timer = setInterval(() => {\n      checkTx();\n    }, 1000);\n    return () => {\n      clearInterval(timer);\n    };\n  }, []);\n  async function passProps() {\n    await createTxQr(repaddress, amount);\n  }\n  const ref = useRef(null);\n  async function checkTx() {\n    const balNew = await fetchBalance(repaddress);\n    console.log(\"checked\", balNew);\n    console.log(\"balance dekhlo\", balance);\n    if (balNew != balance) {\n      setTxDone(true);\n      console.log(\"tx hogaya bro\", balance);\n    }\n  }\n  async function fetchBalance(repaddress) {\n    const address = repaddress;\n    const key = new PublicKey(address);\n    const connection = new Connection(clusterApiUrl(\"devnet\"));\n    const bal = await connection.getBalance(key);\n    return bal / LAMPORTS_PER_SOL;\n  }\n  async function createTxQr(recipientAddr, Amount) {\n    const recipient = new PublicKey(recipientAddr);\n    const amount = new BigNumber(Amount);\n    const reference = new Keypair().publicKey;\n    const label = \"\"; //project name\n    const message = \"\"; //what message on tx ?\n    const memo = \"\"; //project name\n    const url = encodeURL({\n      recipient,\n      amount,\n      reference,\n      label,\n      message,\n      memo\n    });\n    console.log(\"url\", url.href);\n    if (typeof window !== \"undefined\") {\n      const qrCode = createQR(url);\n      qrCode.append(ref.current);\n    }\n    await fetchBalance().then(e => {\n      setBalance(e);\n    });\n    console.log(\"bro bal\", balance);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"Q+j4sCiT4orzWb9wDDNrMMhJ+MY=\");\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["Home","props","_s","repaddress","amount","balance","setBalance","useState","txDone","setTxDone","useEffect","passProps","timer","setInterval","checkTx","clearInterval","createTxQr","ref","useRef","balNew","fetchBalance","console","log","address","key","PublicKey","connection","Connection","clusterApiUrl","bal","getBalance","LAMPORTS_PER_SOL","recipientAddr","Amount","recipient","BigNumber","reference","Keypair","publicKey","label","message","memo","url","encodeURL","href","window","qrCode","createQR","append","current","then","e","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Shlok/Desktop/react2/react-demo/src/Home.js"],"sourcesContent":["\r\n\r\n\r\nconst Home = (props) => {\r\n    const {repaddress,amount}=props\r\n    const [balance, setBalance] = useState(0);\r\n    const [txDone, setTxDone] = useState(false);\r\n\r\n    useEffect(() => {\r\n        passProps();\r\n        const timer = setInterval(() => {\r\n            checkTx();\r\n        }, 1000);\r\n\r\n        return () => {\r\n            clearInterval(timer);\r\n        };\r\n    }, []);\r\n\r\n    async function passProps() {\r\n        await createTxQr(repaddress, amount);\r\n    }\r\n\r\n    const ref = useRef(null);\r\n\r\n    async function checkTx() {\r\n        const balNew = await fetchBalance(repaddress);\r\n        console.log(\"checked\", balNew);\r\n        console.log(\"balance dekhlo\", balance)\r\n        if (balNew != balance) {\r\n            setTxDone(true);\r\n            console.log(\"tx hogaya bro\", balance);\r\n        }\r\n    }\r\n\r\n    async function fetchBalance( repaddress) {\r\n        const address = repaddress;\r\n        const key = new PublicKey(address);\r\n        const connection = new Connection(clusterApiUrl(\"devnet\"));\r\n        const bal = await connection.getBalance(key);\r\n        return bal / LAMPORTS_PER_SOL;\r\n    }\r\n\r\n    async function createTxQr(recipientAddr, Amount) {\r\n        const recipient = new PublicKey(recipientAddr);\r\n        const amount = new BigNumber(Amount);\r\n        const reference = new Keypair().publicKey;\r\n        const label = \"\"; //project name\r\n        const message = \"\"; //what message on tx ?\r\n        const memo = \"\"; //project name\r\n        const url = encodeURL({\r\n            recipient,\r\n            amount,\r\n            reference,\r\n            label,\r\n            message,\r\n            memo,\r\n        });\r\n        console.log(\"url\", url.href);\r\n\r\n        if (typeof window !== \"undefined\") {\r\n            const qrCode = createQR(url);\r\n            qrCode.append(ref.current);\r\n        }\r\n\r\n        await fetchBalance()\r\n        .then((e) => {setBalance(e)})\r\n        \r\n        console.log(\"bro bal\", balance)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div ref={ref} />\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}